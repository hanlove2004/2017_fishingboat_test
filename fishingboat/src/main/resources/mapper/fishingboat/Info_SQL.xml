<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="info">

	<!-- 어선기본정보 조회 -->
	<select id="selectInfoList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
			SELECT
				ROW_NUMBER() OVER(ORDER BY SHIP_NO) AS RNUM,
				ROW_NUMBER() OVER(ORDER BY SHIP_NO DESC) AS ROWS_NUM,
				SUBSTR(SHIP_NO,1,7)||' - '||SUBSTR(SHIP_NO,8,12) AS TITLE,
				SUBSTR(SHIP_NO,1,7) AS TITLE1,
				SUBSTR(SHIP_NO,8,12) AS TITLE2,
				SHIP_NO,
				RGT_MBD_NM,
				SHP_NM,
				FS_MET_CODE,
				CODE_CTN,
				SUNJONG,
				SHIP_MATS_CODE,
				SUNJEOKHANG,
				HANG_NAME,
				ENGINE_KIND,
				CODE_CTN_3,
				ENGINE_PS,
				ENGINE_KW,
				ENGINE_NUM,
				JOSUNJA,
				LEN,
				BRE,
				DPH,
				TON 
			FROM 
				(
					SELECT 
						A.SHIP_NO,
						A.RGT_MBD_NM,
						A.SHP_NM,
						A.FS_MET_CODE,
						A.CODE_CTN,
						A.SUNJONG,
						A.SHIP_MATS_CODE,
						A.SUNJEOKHANG,
						A.HANG_NAME,
						A.ENGINE_KIND,
						A.CODE_CTN_3,
						A.ENGINE_PS,
						A.ENGINE_KW,
						A.ENGINE_NUM,
						A.JOSUNJA,
						A.LEN,
						A.BRE,
						A.DPH,
						A.TON
					FROM 
						VI_SHIP A,
						(
							SELECT 
								* 
							FROM 
								TB_BROKE_YN 
							WHERE 
								BROTYPE='sell'
						) B
					WHERE 
						A.SHIP_NO(+) = B.SHIP_NO
					GROUP BY 
						A.SHIP_NO,
						A.RGT_MBD_NM,
						A.SHP_NM,
						A.FS_MET_CODE,
						A.CODE_CTN,
						A.SUNJONG,
						A.SHIP_MATS_CODE,
						A.SUNJEOKHANG,
						A.HANG_NAME,
						A.ENGINE_KIND,
						A.CODE_CTN_3,
						A.ENGINE_PS,
						A.ENGINE_KW,
						A.ENGINE_NUM,
						A.JOSUNJA,
						A.LEN,
						A.BRE,
						A.DPH,
						A.TON
				) AA,
				(
					SELECT 
						* 
					FROM 
						TB_JOB_CODE_T
				) BB
			WHERE 
				AA.CODE_CTN = BB.JOBVALUE(+)
			<if test="keywordnum1 != null and keywordnum1 != ''">
				AND SUBSTR(SHIP_NO,1,7) LIKE '%' || #{keywordnum1} || '%'
			</if>
			<if test="keywordnum2 != null and keywordnum2 != ''">
				AND SUBSTR(SHIP_NO,8,12) LIKE '%' || #{keywordnum2} || '%'
			</if>
			<if test="keywordnam != null and keywordnam != ''">
				AND SHP_NM LIKE '%' || #{keywordnam} || '%'
			</if>
			<if test="keywordton != null and keywordton != 0">
				<choose>
					<when test="keywordton == 1">
						<![CDATA[
							AND TON <= 2
						]]> 
					</when>
					<when test="keywordton == 2">
						AND TON BETWEEN '2' AND '3'
					</when>
					<when test="keywordton == 3">
						AND TON BETWEEN '3' AND '5'
					</when>
					<when test="keywordton == 4">
						AND TON BETWEEN '5' AND '10'
					</when>
					<when test="keywordton == 5">
						AND TON BETWEEN '10' AND '20'
					</when>
					<when test="keywordton == 6">
						AND TON BETWEEN '20' AND '40'
					</when>
					<when test="keywordton == 7">
						AND TON BETWEEN '40' AND '80'
					</when>
					<when test="keywordton == 8">
						<![CDATA[
							AND TON >= 80
						]]> 
					</when>
				</choose>
			</if>
			<if test="keywordarea != null and keywordarea != ''">
				AND HANG_NAME LIKE '%' || #{keywordarea} || '%'
			</if>
			<if test="keywordjob != null and keywordjob != ''">
				AND JOBKEY LIKE '%' || #{keywordjob} || '%'
			</if>
		<include refid="common.pagingPost"/>
	</select>
	
	<!-- 어선기본정보 상세보기 -->
	<select id="selectInfoDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				A.SHIP_NO,
				SUBSTR(A.SHIP_NO,1,7)||' - '||SUBSTR(A.SHIP_NO,8,12) AS TITLE,
				A.RGT_MBD_NM,
				A.SHP_NM,
				A.FS_MET_CODE,
				A.CODE_CTN,
				A.SUNJONG,
				A.SHIP_MATS_CODE,
				A.SUNJEOKHANG,
				A.HANG_NAME,
				A.ENGINE_KIND,
				A.CODE_CTN_3,
				A.ENGINE_PS,
				A.ENGINE_KW,
				A.ENGINE_NUM,
				A.JOSUNJA,
				A.LEN,
				A.BRE,
				A.DPH,
				A.TON,
				B.NAME,
				B.RGT_MBD_REG_NO,
				B.JUSO,
				B.JIBUN,
				B.BIGO
			FROM 
				VI_SHIP A,
				MARTN_PNCORG B
			WHERE 
				A.SHIP_NO = #{shipNo}
				AND A.SHIP_NO = B.SHIP_NO(+)
		]]>
	</select>
	
	<!-- 어선검사정보 조회 -->
	<select id="selectInfoSearchList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
			SELECT
				ROW_NUMBER() OVER(ORDER BY A.SHIP_NO) AS RNUM,
				ROW_NUMBER() OVER(ORDER BY A.SHIP_NO desc) AS ROWS_NUM,
				SUBSTR(A.SHIP_NO,1,7)||' - '||SUBSTR(A.SHIP_NO,8,12) AS TITLE,
				A.SHIP_NO,
				A.SHIP_NAME, 
				A.REGISTERED_LEN, 
				A.REGISTERED_BR, 
				A.REGISTERED_DTH, 
				A.MUSUN_SULBI, 
				A.MCR_KW, 
				A.MCE_PS, 
				A.LAUNCHED_DATE, 
				A.SHIP_BUILT, 
				A.SHIP_BUILDER, 
				A.OWNER_NAME, 
				A.OWNER_COMPANY, 
				A.SURVEY_T_DATE, 
				A.SURVEY_LOC, 
				A.REMARK
			FROM 
				VI_SHIP_MASTER A,
				(
					SELECT 
						* 
					FROM 
						TB_BROKE_YN 
					WHERE 
						BROTYPE='sell'
				) B
			WHERE 
				A.SHIP_NO(+) = B.SHIP_NO
				<if test="keywordnum1 != null and keywordnum1 != ''">
					AND SUBSTR(A.SHIP_NO,1,7) LIKE '%' || #{keywordnum1} || '%'
				</if>
				<if test="keywordnum2 != null and keywordnum2 != ''">
					AND SUBSTR(A.SHIP_NO,8,12) LIKE '%' || #{keywordnum2} || '%'
				</if>
				<if test="keywordnam != null and keywordnam != ''">
					AND A.SHIP_NAME LIKE '%' || #{keywordnam} || '%'
				</if>
			GROUP BY 
				A.SHIP_NO, 
				A.SHIP_NAME, 
				A.REGISTERED_LEN, 
				A.REGISTERED_BR, 
				A.REGISTERED_DTH, 
				A.MUSUN_SULBI, 
				A.MCR_KW, 
				A.MCE_PS, 
				A.LAUNCHED_DATE, 
				A.SHIP_BUILT, 
				A.SHIP_BUILDER, 
				A.OWNER_NAME, 
				A.OWNER_COMPANY, 
				A.SURVEY_T_DATE, 
				A.SURVEY_LOC, 
				A.REMARK
		<include refid="common.pagingPost"/>
	</select>
	
	<!-- 어선검사정보 상세보기 -->
	<select id="selectInfoSearchDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT 
				SHIP_NO,
				SUBSTR(SHIP_NO,1,7)||' - '||SUBSTR(SHIP_NO,8,12) AS TITLE,
				SHIP_NAME,
				REGISTERED_LEN,
				REGISTERED_BR,
				REGISTERED_DTH,
				MUSUN_SULBI,
				MCR_KW,
				MCE_PS,
				LAUNCHED_DATE,
				SHIP_BUILT,
				SHIP_BUILDER,
				OWNER_NAME,
				OWNER_COMPANY,
				SURVEY_T_DATE,
				SURVEY_LOC,
				REMARK,
				OFFICE_KOR_NM,
				GUBUNVALUE
			FROM 
				VI_SHIP_MASTER
			WHERE 
				SHIP_NO = #{shipNo}
		]]>
	</select>
	
	<!-- 기타어선관련정보 (업체정보) -->
	<select id="selectStoreList" parameterType="hashmap" resultType="hashmap">
		<include refid="common.pagingPre"/>
			SELECT
				ROW_NUMBER() OVER(ORDER BY STOREEDATE) AS RNUM,
				ROW_NUMBER() OVER(ORDER BY STOREEDATE desc) AS ROWS_NUM,
				STORENAME AS TITLE,
				STOREBOSS,
				STORETELNUMBER,
				PHONENUMBER,
				STORENUMBER,
				STORESDATE,
				STOREURL,
				STOREEDATE,
				STOREADDRESS,
				STOREADDRESS1,
				STOREADDRESS2,
				INTROTEXT,
				STORESERVICE,
				USR_ID,
				FLE_ORG_NAM,
				FLE_SAV_NAM,
				SEQ,
				ISUSE
			FROM
				TB_STORE
			WHERE
				1 = 1
				AND ISUSE = 'Y'
			<if test="keysido != null and keysido != ''">
				AND STOREADDRESS1 LIKE '%' || (SELECT VAL FROM TB_STORE_SIDO_CODE WHERE SIDOKEY = #{keysido}) || '%'
			</if>
			<if test="keygugun != null and keygugun != ''">
				AND STOREADDRESS1 LIKE '%' || (SELECT VAL FROM TB_STORE_GUGUN_CODE WHERE GUGUNKEY = #{keygugun}) || '%'
			</if>
			<if test="makeservice != null and makeservice != ''">
				AND REGEXP_LIKE(STORESERVICE, REPLACE(#{makeservice}, ',', '|'))
			</if>
		<include refid="common.pagingPost"/>
	</select>
	
	<!-- 업체정보 목록에서 구군 검색 -->
	<select id="selectGugunKeyList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				* 
			FROM 
				TB_STORE_GUGUN_CODE 
			WHERE 
				GUGUNKEY LIKE #{keysido} || '%' 
		]]>
	</select>
	
	<!-- 업체정보 상세보기 -->
	<select id="selectStoreDetail" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				STORENAME AS TITLE,
				STOREBOSS,
				STORETELNUMBER,
				PHONENUMBER,
				STORENUMBER,
				STORESDATE,
				STOREURL,
				TO_CHAR(STOREEDATE,'yyyy-mm-dd') AS STOREEDATE,
				STOREADDRESS,
				STOREADDRESS1,
				STOREADDRESS2,
				INTROTEXT,
				STORESERVICE,
				USR_ID,
				FLE_ORG_NAM,
				FLE_SAV_NAM,
				SEQ
			FROM 
				TB_STORE
			WHERE 
				SEQ = #{seq}
		]]>
	</select>
	
	<!-- 업체정보 약도파일 정보 insert -->
	<insert id="insertStoreAddr" parameterType="hashmap">
		<![CDATA[
			INSERT INTO 
				TB_FILE_T 
				(	
					SEQ, 
					BOARD_SEQ,
					ORG_FLE_NAM, 
					REG_DAT, 
					SAV_FLE_NAM, 
					BOARD_TYPE
				)
			VALUES 
				(
					(
						SELECT 
							NVL(MAX(SEQ), 0) + 1 
						FROM
							TB_FILE_T
					),
					(
						SELECT 
							NVL(MAX(SEQ),0) + 1
						FROM
							TB_STORE
					),
					#{ORIGINAL_FILE_NAME},
					SYSDATE,
					#{STORED_FILE_NAME},
					#{board_type}
				)
		]]>
	</insert>
	
	<!-- 업체정보 insert -->
	<insert id="insertStore" parameterType="hashmap">
		<![CDATA[
			INSERT INTO 
				TB_STORE
				(
					STORENAME,
					STOREBOSS,
					STORETELNUMBER,
					PHONENUMBER,
					STORENUMBER,
					STORESDATE,
					STOREURL,
					STOREEDATE,
					STOREADDRESS,
					STOREADDRESS1,
					STOREADDRESS2,
					INTROTEXT,
					STORESERVICE,
					USR_ID,
					FLE_ORG_NAM,
					FLE_SAV_NAM,
					SEQ
				)
			VALUES
				(
					#{storename},
					#{storeboss},
					#{storetel},
					#{phonenumber},
					#{storenumber},
					#{storesdate},
					#{storeurl},
					SYSDATE,
					#{sample6_postcode},
					#{sample6_address},
					#{sample6_address2},
					#{introtext},
					#{makeservice},
					#{usr_id},
					#{ORIGINAL_FILE_NAME},
					#{STORED_FILE_NAME},
					(
						SELECT 
							NVL(MAX(SEQ),0)+1 
						FROM
							TB_STORE
					)
				)
		]]>
	</insert>
	
</mapper>

